{"ast":null,"code":"var _jsxFileName = \"C:\\\\Koodaus\\\\GIT\\\\webcomptest\\\\content-scroller\\\\src\\\\direflow-components\\\\content-scroller\\\\App.js\";\nimport React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from 'direflow-component';\nimport styles from './App.css';\nimport Slider from './Slider/Slider';\n\nconst App = props => {\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Slider, {\n    elements: populateElements(props),\n    visibleDivs: props.visibleDivs,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }\n  }));\n};\n\nfunction populateElements(props) {\n  const elementsToIterate = [props.image1, props.image2, props.image3, props.image4, props.image5, props.image6];\n  const finalElements = [];\n  elementsToIterate.forEach(e => {\n    if (e !== \"empty\") {\n      finalElements.push(e);\n    }\n  });\n  return finalElements;\n}\n\nApp.defaultProps = {\n  image1: \"empty\",\n  image2: \"empty\",\n  image3: \"empty\",\n  image4: \"empty\",\n  image5: \"empty\",\n  image6: \"empty\",\n  visibleDivs: \"1\"\n};\nApp.propTypes = {\n  image1: PropTypes.string,\n  image2: PropTypes.string,\n  componentTitle: PropTypes.string,\n  sampleList: PropTypes.array\n};\nexport default withStyles(styles)(App);","map":{"version":3,"sources":["C:/Koodaus/GIT/webcomptest/content-scroller/src/direflow-components/content-scroller/App.js"],"names":["React","useContext","PropTypes","withStyles","styles","Slider","App","props","populateElements","visibleDivs","elementsToIterate","image1","image2","image3","image4","image5","image6","finalElements","forEach","e","push","defaultProps","propTypes","string","componentTitle","sampleList","array"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,SAASC,UAAT,QAA2B,oBAA3B;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;;AAEA,MAAMC,GAAG,GAAIC,KAAD,IAAW;AAErB,sBACE,uDAEI,oBAAC,MAAD;AAAQ,IAAA,QAAQ,EAAEC,gBAAgB,CAACD,KAAD,CAAlC;AAA2C,IAAA,WAAW,EAAEA,KAAK,CAACE,WAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADF;AAOD,CATD;;AAWA,SAASD,gBAAT,CAA0BD,KAA1B,EAAiC;AAC/B,QAAMG,iBAAiB,GAAG,CAACH,KAAK,CAACI,MAAP,EACxBJ,KAAK,CAACK,MADkB,EAExBL,KAAK,CAACM,MAFkB,EAGxBN,KAAK,CAACO,MAHkB,EAIxBP,KAAK,CAACQ,MAJkB,EAKxBR,KAAK,CAACS,MALkB,CAA1B;AAMA,QAAMC,aAAa,GAAG,EAAtB;AACAP,EAAAA,iBAAiB,CAACQ,OAAlB,CAA2BC,CAAD,IAAO;AAE/B,QAAIA,CAAC,KAAK,OAAV,EAAkB;AAChBF,MAAAA,aAAa,CAACG,IAAd,CAAmBD,CAAnB;AACD;AACF,GALD;AAMA,SAAOF,aAAP;AACD;;AAEDX,GAAG,CAACe,YAAJ,GAAmB;AACjBV,EAAAA,MAAM,EAAE,OADS;AAEjBC,EAAAA,MAAM,EAAE,OAFS;AAGjBC,EAAAA,MAAM,EAAE,OAHS;AAIjBC,EAAAA,MAAM,EAAE,OAJS;AAKjBC,EAAAA,MAAM,EAAE,OALS;AAMjBC,EAAAA,MAAM,EAAE,OANS;AAOjBP,EAAAA,WAAW,EAAE;AAPI,CAAnB;AAWAH,GAAG,CAACgB,SAAJ,GAAgB;AACdX,EAAAA,MAAM,EAAET,SAAS,CAACqB,MADJ;AAEdX,EAAAA,MAAM,EAAEV,SAAS,CAACqB,MAFJ;AAGdC,EAAAA,cAAc,EAAEtB,SAAS,CAACqB,MAHZ;AAIdE,EAAAA,UAAU,EAAEvB,SAAS,CAACwB;AAJR,CAAhB;AAOA,eAAevB,UAAU,CAACC,MAAD,CAAV,CAAmBE,GAAnB,CAAf","sourcesContent":["import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { withStyles } from 'direflow-component';\nimport styles from './App.css';\nimport Slider from './Slider/Slider';\n\nconst App = (props) => {\n  \n  return (\n    <>\n      \n        <Slider elements={populateElements(props)} visibleDivs={props.visibleDivs}/>\n      \n    </>\n  );\n};\n\nfunction populateElements(props) {\n  const elementsToIterate = [props.image1, \n    props.image2, \n    props.image3, \n    props.image4, \n    props.image5,\n    props.image6];\n  const finalElements = [];\n  elementsToIterate.forEach((e) => {\n    \n    if (e !== \"empty\"){\n      finalElements.push(e);\n    }\n  });\n  return finalElements;\n}\n\nApp.defaultProps = {\n  image1: \"empty\",\n  image2: \"empty\",\n  image3: \"empty\",\n  image4: \"empty\",\n  image5: \"empty\",\n  image6: \"empty\",\n  visibleDivs: \"1\",\n}\n\n\nApp.propTypes = {\n  image1: PropTypes.string,\n  image2: PropTypes.string,\n  componentTitle: PropTypes.string,\n  sampleList: PropTypes.array,\n};\n\nexport default withStyles(styles)(App);\n"]},"metadata":{},"sourceType":"module"}